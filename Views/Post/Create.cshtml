@model ASPNETCore_DB.Models.PostItem

@{
    Layout = "_UserLayout";
}

<div class="form-body">
    <div class="row">
        <div class="form-holder">
            <div class="form-content">
                <div class="form-items">
                    <h3>Create Post</h3>

                    <form class="requires-validation" asp-action="Create" method="post" enctype="multipart/form-data" novalidate>
                        <div class="col-md-12">
                            <label for="ItemName">Item Name</label>
                            <input type="text" class="form-control" asp-for="ItemName" placeholder="Item Name" required>
                            <div class="valid-feedback">Item Name is valid!</div>
                            <div class="invalid-feedback">Item Name cannot be blank!</div>
                        </div>

                        <div class="col-md-12">
                            <label for="Description">Description</label>
                            <textarea class="form-control" asp-for="Description" placeholder="Description" required></textarea>
                            <div class="valid-feedback">Description is valid!</div>
                            <div class="invalid-feedback">Description cannot be blank!</div>
                        </div>

                        <div class="col-md-12">
                            <label for="PosterName">Poster Name</label>
                            <input type="text" class="form-control" asp-for="PosterName" placeholder="Poster Name" required>
                            <div class="valid-feedback">Poster Name is valid!</div>
                            <div class="invalid-feedback">Poster Name cannot be blank!</div>
                        </div>

                        <div class="col-md-12">
                            <label for="ContactDetails">Contact Details</label>
                            <input type="text" class="form-control" asp-for="ContactDetails" placeholder="Contact Details" required>
                            <div class="valid-feedback">Contact Details are valid!</div>
                            <div class="invalid-feedback">Contact Details cannot be blank!</div>
                        </div>

                        <div class="col-md-12">
                            <label for="Course">Department</label>
                            <input type="text" class="form-control" asp-for="Course" placeholder="Department" required>
                            <div class="valid-feedback">Department is valid!</div>
                            <div class="invalid-feedback">Department cannot be blank!</div>
                        </div>

                        <div class="col-md-12">
                            <label for="Category">Category</label>
                            <select class="form-control" asp-for="Category" required>
                                <option selected disabled value="">Select Category</option>
                                <option>ID Card</option>
                                <option>Backpack</option>
                                <option>Phone</option>
                                <option>Books</option>
                                <option>Keys</option>
                                <option>Other</option>
                            </select>
                            <div class="valid-feedback">You selected a category!</div>
                            <div class="invalid-feedback">Please select a category!</div>
                        </div>


                        <div class="col-md-12">
                            <label for="imageUpload">Upload Image:</label>
                            <input type="file" id="imageUpload" name="ImageFile" accept="image/*" class="form-control" required><br><br>
                            <div class="valid-feedback">Image selected!</div>
                            <div class="invalid-feedback">Please upload an image!</div>
                        </div>


                        <!-- Hidden fields for latitude and longitude 
                        <input type="hidden" id="Latitude" name="Latitude" asp-for="Latitude" />
                        <input type="hidden" id="Longitude" name="Longitude" asp-for="Longitude" />

                        <div id="map" style="width: 400px; height: 400px;"></div>
                        <p id="coordinates"></p> -->

                        <!-- Item Type buttons -->
                        <div class="col-md-12">
                            <label>Item Type</label>
                            <div class="mt-3">
                                <button type="button" class="btn btn-outline-danger" onclick="setItemType('Lost')">Lost</button>
                                <button type="button" class="btn btn-outline-success" onclick="setItemType('Found')">Found</button>
                            </div>
                            <input type="hidden" id="ItemType" asp-for="ItemType" />
                            <div class="invalid-feedback">Please select an item type!</div>
                        </div>

                        <div class="form-button mt-3">
                            <button id="submit" type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </form>

                    <!-- Map section -->
                    
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let map;
        let marker;

        // Initialize the map
        function initMap() {
            const welkomLocation = { lat: -27.9798, lng: 26.7322 };  // Coordinates for Welkom, South Africa

            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 12,
                center: welkomLocation,
            });

            // Add a click event listener to the map
            map.addListener("click", function (event) {
                placeMarker(event.latLng);
            });
        }

        // Function to place the marker on the map
        function placeMarker(location) {
            // Remove existing marker, if any
            if (marker) {
                marker.setMap(null);
            }

            // Create a new marker at the clicked location
            marker = new google.maps.Marker({
                position: location,
                map: map,
                title: 'Item found here!'
            });

            // Display the latitude and longitude
            const lat = location.lat();
            const lng = location.lng();
            document.getElementById("coordinates").innerText = `Coordinates: Latitude ${lat}, Longitude ${lng}`;

            // Set the latitude and longitude values in the hidden form fields
            document.getElementById("Latitude").value = lat;
            document.getElementById("Longitude").value = lng;
        }

        function setItemType(type) {
            document.getElementById("ItemType").value = type;
        }

        (function () {
            'use strict';
            const forms = document.querySelectorAll('.requires-validation');
            Array.from(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyABtNikWWuoshEnO6XYb_Oh0pRPXhB7VWQ&callback=initMap" async defer></script>
}
